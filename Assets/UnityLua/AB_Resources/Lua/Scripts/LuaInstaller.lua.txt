require "Lua/Scripts/StringExtensions"
require "Lua/Scripts/Global"

InstallerEnv = new_env()

local function LuaInstaller(installerEnv)
    local function Require(paths, parent)
        for i, path in pairs(paths) do
            if string.endswith(path, "System") then
                local go = create_system(path, installerEnv.Container)
                if parent == nil then
                    CS.GameObject.DontDestroyOnLoad(go)
                else
                    go.transform:SetParent(parent)
                end
            else
                require(path)
            end
        end
    end

    local function Initialize()
        Require(require("Lua/Preferences/Global"), nil)
    end

    local function OnSceneLoaded(scene, mode)
        local paths = require("Lua/Preferences/Overview")
        for i, path in pairs(paths) do
            local name = string.match(path, ".+/(.+)")
            if string.contains(string.lower(name), string.lower(scene.name)) then
                Require(require(path), scene:GetRootGameObjects()[0].transform)
            end
        end

        if mode == CS.UnityEngine.SceneManagement.LoadSceneMode.Single then
            CS.UnityEngine.Resources.UnloadUnusedAssets()
            collectgarbage("collect")
        end
    end

    local function OnEnable()
    end

    local function Update()
    end

    local function OnDisbale()
    end

    installerEnv.Initialize = Initialize
    installerEnv.OnSceneLoaded = OnSceneLoaded
    installerEnv.OnEnable = OnEnable
    installerEnv.Update = Update
    installerEnv.OnDisbale = OnDisbale
    return installerEnv
end

return LuaInstaller(InstallerEnv)

local function TutorialSystem(systemEnv)
    local self = systemEnv.self
    local buttonComponents = nil

    local function Initialize(eventSystem, poolManager, groupFactory, prefabFactory)
        xlua.hotfix(
            CS.TutorialExample,
            "HotfixTest",
            function(self)
                print("Hotfix Success!")
            end
        )
        buttonComponents = system.Create(self, typeof(CS.UniEasy.ECS.ViewComponent), typeof(CS.UnityEngine.UI.Button))
    end

    local function OnEnable()
        subscribe(
            CS.UniEasy.ECS.IEntity,
            group.OnAdd(buttonComponents),
            function(entity)
                local viewComponent = get_component(entity, CS.UniEasy.ECS.ViewComponent)
                local button = get_component(entity, CS.UnityEngine.UI.Button)
                subscribe(
                    CS.UnityEngine.EventSystems.PointerEventData,
                    trigger.OnPointerClickAsObservable(button),
                    function(_)
                        if string.contains(button.name, "ReloadSceneButton") then
                            CS.UnityEngine.SceneManagement.SceneManager.LoadScene("Tutorial")
                        elseif string.contains(button.name, "CreatePrimitiveButton") then
                            CS.UnityEngine.GameObject.CreatePrimitive(CS.UnityEngine.PrimitiveType.Cube)
                        end
                    end
                )
            end
        )
    end

    local function OnDisable()
    end

    local function OnDestroy()
    end

    systemEnv.Initialize = Initialize
    systemEnv.OnEnable = OnEnable
    systemEnv.OnDisable = OnDisable
    systemEnv.OnDestroy = OnDestroy
end

return TutorialSystem

-- c# extension classes
trigger = CS.UniRx.Triggers.ObservableTriggerExtensions
scene_manager = CS.UnityEngine.SceneManagement.SceneManager

-- c# generic methods
add_to_generic = xlua.get_generic_method(typeof(CS.UniRx.DisposableExtensions), "AddTo")
add_to = function(type, disposable, container)
    return add_to_generic(type)(disposable, container)
end

subscribe_generic = xlua.get_generic_method(typeof(CS.UniEasy.IObservableExtensions), "luaSubscribe")
subscribe = function(type, source, on_next, ...)
    local disposable = subscribe_generic(type)(source, on_next)
    for i, v in ipairs {...} do
        add_to(CS.System.IDisposable, disposable, v)
    end
    return disposable
end

-- lua methods
function new_env(metatable)
    local luaenv = {}
    local meta = {}
    if metatable == nil then
        meta.__index = CS.UniEasy.GlobalXLua.LuaEnv.Global
    else
        meta.__index = metatable
    end
    setmetatable(luaenv, meta)
    meta = nil
    return luaenv
end
